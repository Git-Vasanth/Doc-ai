{
  "users": {
    "2yI4N4MNmpRo8i2iYXFfn9fvusC2": {
      "displayName": "ding",
      "email": "dd@gmail.com",
      "sessions": {
        "session01": {
          "loginTime": "2025-03-20T10:00:00Z",
          "sessionDuration": "30 minutes",  // This should be dynamically calculated based on loginTime and logoutTime
          "conversations": [
            {
              "user": "ding",
              "message": "Hello, AI!",
              "timestamp-user": "2025-03-20T10:16:00Z"
            },
            {
              "user": "Doc-AI",
              "message": "Hi, how can I help you?",
              "timestamp-ai": "2025-03-20T10:16:30Z"
            },
            {
              "user": "ding",
              "message": "What's the weather like?",
              "timestamp-user": "2025-03-20T10:20:00Z"
            },
            {
              "user": "Doc-AI",
              "message": "It's sunny today.",
              "timestamp-ai": "2025-03-20T10:21:00Z"
            }
          ],
          "logoutTime": "2025-03-20T10:30:00Z"
        }
      }
    }
  }
}

my signup page.js has this

await set(ref(db, 'users/' + user.uid), {
        displayName: name,
        email: email,
      });

login.js - user writes his credential and he goes to chat,js or chatopen.js
fileuploadform - to upload fiels and urls a component in chat,js or chatopen.js
sidebar.js - to show user display name and has button when clicks fileupload form opens and a logout button . this sidebar.js is a component in chat,js or chatopen.js

how to implement this structure



{
  "users": {
    "2yI4N4MNmpRo8i2iYXFfn9fvusC2": {
      "displayName": "ding",
      "email": "dd@gmail.com",
      "role": "student"  // This user is a student
    },
    "user02": {
      "displayName": "jane",
      "email": "jane@gmail.com",
      "role": "student"
    },
    "Doc-AI": {
      "displayName": "AI Teacher",
      "email": "ai@teaching.com",
      "role": "teacher"
    }
  },
  "classrooms": {
    "classroom01": {
      "classroomName": "AI Teaching Room",
      "teacherId": "Doc-AI",  // AI Teacher ID (reference to users)
      "students": [
        "2yI4N4MNmpRo8i2iYXFfn9fvusC2",  // Reference to student users
        "user02"
      ],
      "session": {
        "startTime": "2025-03-20T10:00:00Z",
        "endTime": "2025-03-20T11:00:00Z",
        "duration": "1 hour",
        "messages": [
          {
            "userId": "2yI4N4MNmpRo8i2iYXFfn9fvusC2", 
            "message": "Hello, AI!",
            "timestamp-user": "2025-03-20T10:16:00Z",
            "timestamp-ai": "2025-03-20T10:16:30Z"
          },
          {
            "userId": "Doc-AI",
            "message": "Hi, how can I assist you today?",
            "timestamp-ai": "2025-03-20T10:16:30Z"
          },
          {
            "userId": "2yI4N4MNmpRo8i2iYXFfn9fvusC2", 
            "message": "What's the weather like?",
            "timestamp-user": "2025-03-20T10:20:00Z",
            "timestamp-ai": "2025-03-20T10:20:30Z"
          },
          {
            "userId": "Doc-AI",
            "message": "It's sunny today.",
            "timestamp-ai": "2025-03-20T10:21:00Z"
          },
          {
            "userId": "user02", 
            "message": "Thank you for the update, AI.",
            "timestamp-user": "2025-03-20T10:22:00Z",
            "timestamp-ai": "2025-03-20T10:22:30Z"
          }
        ]
      }
    }
  }
}
